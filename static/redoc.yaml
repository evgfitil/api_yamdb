openapi: 3.0.2
info:
  title: 'YaMDb API'
  version: ''
  description: |
    API requests started at `/api/v1/`

    # Description
    The YaMDb project collects user feedback on the different content types. Contents are divided into categories: "Books", "Films", "TV Shows" and "Music".

    # User registration algorithm
    1. The User sends a request with the `email` and `username` at `/auth/email/`.
    2. **YaMDB** sends an email with a (`confirmation_code`) on the `email` .
    3. The User sends a request with the `email` and `confirmation_code` at `/auth/token/`, receives a `token` (JWT-token) upon request.
    4. The User can send a PATCH-request at `/users/me/` and fill out the fields in his profile.

    # User roles
    - **Anonymous** — can view descriptions of content, read reviews and comments.
    - **Authenticated user** — can read everything, can post reviews and rate  content (films/books/songs), can comment on others' reviews and rate them, can edit and delete **your** reviews and comments.
    - **Moderator** - have the same permissions as **Authenticated User** plus the permissions to delete **any** reviews and comments.
    - **Admin** - all permissions to manage the project and all its contents. Can create and delete categories and all content. Can assign roles to users.
    - **Django Admin** — the same permissions as the **Admin** role.


servers:
  - url: /api/v1/

tags:
  - name: REVIEWS
    description: Reviews
  - name: COMMENTS
    description: Comments on the reviews
  - name: AUTH
    description: Authentication
  - name: USERS
    description: Users
  - name: CATEGORIES
    description: Categories (types) of contents
  - name: GENRES
    description: Genre categories
  - name: TITLES
    description: Content to which reviews are written (a particular movie,tv-show, book, song).

paths:
  /titles/{title_id}/reviews/:
    parameters:
      - name: title_id
        in: path
        required: true
        description: object ID
        schema:
          type: number
    get:
      tags:
        - REVIEWS
      description: |
        Get a list of all the reviews                     


        Permissions: **Available without token.**
      responses:
        200:
          description: Comments list with pagination
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: number
                    next:
                      type: string
                    previous:
                      type: string
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/Review'
        404:
          description: Object is is not found
    post:
      tags:
        - REVIEWS
      description: |
        Create a new review. 
                                                      
        The user can leave only one review per object.

        Permissions: **Authenticated users.**
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        200:
          description: 'New review'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        404:
          description: Object is is not found
      security:
      - jwt_auth:
        - write:user,moderator,admin
  /titles/{title_id}/reviews/{review_id}/:
    parameters:
      - name: title_id
        in: path
        required: true
        description: Title ID
        schema:
          type: number
      - name: review_id
        in: path
        required: true
        description: Review ID
        schema:
          type: number
    get:
      tags:
        - REVIEWS
      description: |
        Get a review by id.                                  

        Permissions: **Available without token.**
      responses:
        200:
          description: Review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        404:
          description: Object is is not found
    patch:
      tags:
        - REVIEWS
      description: |
        Partially update review by id.                              

        Permissions: **author review, moderator, or administrator**.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        200:
          description: Revew
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: Object is not found
      security:
      - jwt_auth:
        - write:user,moderator,admin
    delete:
      tags:
        - REVIEWS
      description: |
        Delete review by id                                        

        Permissions: **author review, moderator or administrator.**
      responses:
        204:
          description: ''
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: Object is not found
      security:
      - jwt_auth:
        - write:user,moderator,admin

  /titles/{title_id}/reviews/{review_id}/comments/:
    parameters:
      - name: title_id
        in: path
        required: true
        description: Object ID
        schema:
          type: number
      - name: review_id
        in: path
        required: true
        description: Review ID
        schema:
          type: number
    get:
      tags:
        - COMMENTS
      description: |
        Get a list of all comments to the review by id.                  
                          

        Permissions: **Available without token.**
      responses:
        200:
          description: List of comments with pagination
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: number
                    next:
                      type: string
                    previous:
                      type: string
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/Comment'
        404:
          description: Review or Object is not found
    post:
      tags:
        - COMMENTS
      description: |
        Create a new comment for review.                    

        Permissions: **Authenticated users.**
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        404:
          description: Review or Object is not found
      security:
      - jwt_auth:
        - write:user,moderator,admin

  /titles/{title_id}/reviews/{review_id}/comments/{comment_id}/:
    parameters:
      - name: title_id
        in: path
        required: true
        description: Title ID
        schema:
          type: number
      - name: review_id
        in: path
        required: true
        description: Review ID
        schema:
          type: number
      - name: comment_id
        in: path
        required: true
        description: Comment ID
        schema:
          type: number
    get:
      tags:
        - COMMENTS
      description: |
        Get a comment for review by id.                    

        Permissions: **Available without token.**
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
        404:
          description: Review, comment or title is not found
    patch:
      tags:
        - COMMENTS
      description: |
        Partially update the comment on the review by id.

        Permissions: **Comment author, moderator or administrator**.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: Review, comment or title is not found
      security:
      - jwt_auth:
        - write:user,moderator,admin
    delete:
      tags:
        - COMMENTS
      description: |
        Delete a comment by id.                            

        Permissions: **Comment author, moderator or administrator**.
      responses:
        204:
          description: ''
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: Review, comment or title is not found
      security:
      - jwt_auth:
        - write:user,moderator,admin

  /auth/token/:
    post:
      tags:
        - AUTH
      description: | 
        Getting a JWT token.                                

        Getting a JWT token in exchange for email and confirmation_code.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - confirmation_code
              properties:
                email:
                  type: string
                confirmation_code:
                  type: string
                  writeOnly: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /auth/email/:
    post:
      tags:
        - AUTH
      description: Sending confirmation_code to the sent email.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  email:
                    type: string
                required:
                - email
          description: ''

  /users/:
    get:
      tags:
        - USERS
      description: |
        Get a list of all users.                         

        Permissions: **Admin**
      parameters:
      - name: search
        in: query
        description: username user to filter, search part of the username
        schema:
          type: string
      responses:
        200:
          description: The list of users with pagination
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: number
                    next:
                      type: string
                    previous:
                      type: string
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
        401:
          description: Requires JWT token
      security:
      - jwt_auth:
        - read:admin
        - write:admin
    post:
      tags:
        - USERS
      description: |
        User creation.                         
                  

        Permissions: **Admin**"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
      security:
      - jwt_auth:
        - read:admin
        - write:admin
  /users/{username}/:
    parameters:
      - name: username
        in: path
        required: true
        description: Username
        schema:
          type: string
    get:
      tags:
        - USERS
      description: |
        Get a user by username.
                                 

        Permissions: **Admin**
      responses:
        200:
          description: User ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: User is not found
      security:
      - jwt_auth:
        - read:admin
        - write:admin
    patch:
      tags:
        - USERS
      description: |
        Change user data by username.
                            

        Permissions: **Admin**
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: User is not found
      security:
      - jwt_auth:
        - read:admin
        - write:admin
    delete:
      tags:
        - USERS
      description: |
        Delete a user by username.
                              

        Permissions: **Admin**
      responses:
        204:
          description: User is deleted
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: User is not found
      security:
      - jwt_auth:
        - read:admin
        - write:admin

  /users/me/:
    get:
      tags:
        - USERS
      description: |
        Get your account details.
                                 

        Permissions: **Authorized user**
      responses:
        200:
          description: The object of your account
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
      security:
      - jwt_auth:
        - read:admin,moderator,user
        - write:admin,moderator,user
    patch:
      tags:
        - USERS
      description: |
        Change your account details.
                                   

        Permissions: **Authorized user**
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      security:
      - jwt_auth:
        - read:admin,moderator,user
        - write:admin,moderator,user

  /categories/:
    get:
      tags:
        - CATEGORIES
      description: |
        Get a list of all categories.
                            

        Permissions: **Available without token.**
      parameters:
      - name: search
        in: query
        description: filters by category name
        schema:
          type: string
      responses:
        200:
          description: List of categories with pagination
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: number
                    next:
                      type: string
                    previous:
                      type: string
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/Category'
    post:
      tags:
        - CATEGORIES
      description: |
        Create a category.
                                
                  

        Permissions: **Admin**
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        200:
          description: List of categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
      security:
      - jwt_auth:
        - read:admin
        - write:admin
  /categories/{slug}/:
    delete:
      tags:
        - CATEGORIES
      description: |
        Delete the category.
                            
                  

        Permissions: **Admin**
      parameters:
      - name: slug
        in: path
        required: true
        description: Category slug
        schema:
          type: string
      responses:
        204:
          description: ''
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: Category is not found
      security:
      - jwt_auth:
        - read:admin
        - write:admin

  /titles/:
    get:
      tags:
        - TITLES
      description: |
        Get a list of all Titles.
                    
                    
                    
        Permissions: **Available without token.**
      parameters:
        - name: category
          in: query
          description: filter by category slug
          schema:
            type: string
        - name: genre
          in: query
          description: filter by genre slug
          schema:
            type: string
        - name: name
          in: query
          description: filter by part of the title name
          schema:
            type: string
        - name: year
          in: query
          description: filter by year
          schema:
            type: number
      responses:
        200:
          description: List of all Tiltes with pagination
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: number
                    next:
                      type: string
                    previous:
                      type: string
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/Title'
    post:
      tags:
        - TITLES
      description: |
        Create a Title for reviews.
                    
                    
                    
        Permissions: **Admin**.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TitleCreate'
      responses:
        200:
          description: List of Titles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Title'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
      security:
      - jwt_auth:
        - read:admin
        - write:admin
  /titles/{titles_id}/:
    parameters:
      - name: titles_id
        in: path
        required: true
        description: Title ID
        schema:
          type: number
    get:
      tags:
        - TITLES
      description: |
        Title information.
                    
                    
                    
        Permissions: **Available without token.**
      responses:
        200:
          description: Title
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Title'
        404:
          description: Title is not found
    patch:
      tags:
        - TITLES
      description: |
        Update Title information.
                    
                    
                    
        Permissions: **Admin**
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TitleCreate'
      responses:
        200:
          description: Title
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Title'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: Title is not found
      security:
      - jwt_auth:
        - read:admin
        - write:admin
    delete:
      tags:
        - TITLES
      description: |
        Delete a Title.
                    
                    
                    
        Permissions: **Admin**.
      responses:
        204:
          description: ''
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: Title is not found
      security:
      - jwt_auth:
        - read:admin
        - write:admin

  /genres/:
    get:
      tags:
        - GENRES
      description: |
        Get a list of all Genres.
                    
                    

        Permissions: **Available without token.**
      parameters:
      - name: search
        in: query
        description: filter by genre name
        schema:
          type: string
      responses:
        200:
          description: List of genres with pagination
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: number
                    next:
                      type: string
                    previous:
                      type: string
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/Genre'
    post:
      tags:
        - GENRES
      description: |
        Create a genre.
                    
                    
                    

        Permissions: **Admin**.
      responses:
        200:
          description: List of genres
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
      security:
      - jwt_auth:
        - read:admin
        - write:admin

  /genres/{slug}/:
    delete:
      tags:
        - GENRES
      description: |
        Delete a genre.
                    
                    
                    
        Permissions: **Admin**.
      parameters:
      - name: slug
        in: path
        required: true
        description: Genre slug
        schema:
          type: string
      responses:
        204:
          description: ''
        401:
          description: Requires JWT token
        403:
          description: You have no permissions
        404:
          description: Genre is not found
      security:
      - auth:
        - read:admin
        - write:admin

components:
  schemas:
    User:
      title: User
      type: object
      description: Detailed information about the user
      required:
          - username
          - email
      properties:
        first_name:
          type: string
          title: Name
        last_name:
          type: string
          title: Last name
        username:
          type: string
          title: Username
        bio:
          type: string
          title: About
        email:
          type: string
          title: e-mail
        role:
          type: string
          description: User role. `user` by default.
          enum:
            - user
            - moderator
            - admin

    Title:
      title: Object
      type: object
      required:
        - name
      properties:
        name:
          type: string
          title: Name
        year:
          type: string
          title: Year
        rating:
          type: number
          readOnly: True
          title: Rating based on reviews, if reviews - `None`
        description:
          type: string
          title: Description
        genre:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        category:
          $ref: '#/components/schemas/Category'
    TitleCreate:
      title: Object to modify
      type: object
      required:
        - name
      properties:
        name:
          type: string
          title: Name
        year:
          type: string
          title: Year
        description:
          type: string
          title: Description
        genre:
          type: array
          items:
            type: string
            title: Genre slug
        category:
          type: string
          title: Category slug

    Genre:
      title: Genre
      type: object
      required:
        - name
      properties:
        name:
          type: string
          title: Genre name
        slug:
          type: string
          title: _"slug" Field 

    Review:
      title: Review
      type: object
      description: Review details
      required:
          - text
          - score
      properties:
        id:
          type: integer
          title: Review id
          readOnly: true
        text:
          type: string
          title: Text of review
        author:
          type: string
          title: username of the user
          readOnly: true
        score:
          type: integer
          title: Score
          minimum: 1
          maximum: 10
        pub_date:
          type: string
          format: date-time
          title: Publication date
          readOnly: true

    ValidationError:
      title: Validation Error
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string

    Token:
      title: Token
      type: object
      properties:
        token:
          type: string
          title: access token

    Comment:
      title: Comment
      type: object
      description: Comment details
      required:
        - text
      properties:
        id:
          type: integer
          title: Comment ID
          readOnly: true
        text:
          type: string
          title: Comment text
        author:
          type: string
          title: author's name username
          readOnly: true
        pub_date:
          type: string
          format: date-time
          title: Comment publication date
          readOnly: true

    Category:
      title: Category
      type: object
      required:
        - name
      properties:
        name:
          type: string
          title: Category name
        slug:
          type: string
          title: slug field

  securitySchemes:
    jwt_auth:
      type: apiKey
      name: Bearer
      in: header
